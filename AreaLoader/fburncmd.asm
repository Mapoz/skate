;***************************************************************
;* TMS320C54x C/C++ Codegen                  PC Version 3.831  *
;* Date/Time created: Thu Apr 17 15:15:24 2008                 *
;***************************************************************
	.mmregs
FP	.set	AR7
	.c_mode
	.file	"fburncmd.c"

	.sect	".cinit"
	.align	1
	.field  	1,16
	.field  	_ErsStatus+0,16
	.field  	0,16			; _ErsStatus @ 0

	.sect	".text"
	.bss	_ErsStatus,1,0,0
	.sym	_ErsStatus,_ErsStatus, 4, 3, 16

	.sect	".cinit"
	.align	1
	.field  	2,16
	.field  	_cksum+0,16
	.field  	0,32			; _cksum @ 0

	.sect	".text"
	.bss	_cksum,2,0,2
	.sym	_cksum,_cksum, 15, 3, 32

	.sect	".cinit"
	.align	1
	.field  	2,16
	.field  	_flashstart+0,16
	.field  	32768,32			; _flashstart @ 0

	.sect	".text"
	.bss	_flashstart,2,0,2
	.sym	_flashstart,_flashstart, 15, 3, 32

	.sect	".cinit"
	.align	1
	.field  	2,16
	.field  	_flashnext+0,16
	.field  	524288,32			; _flashnext @ 0

	.sect	".text"
	.bss	_flashnext,2,0,2
	.sym	_flashnext,_flashnext, 15, 3, 32

	.sect	".cinit"
	.align	1
	.field  	2,16
	.field  	_flashbaseov+0,16
	.field  	-1,32			; _flashbaseov @ 0

	.sect	".text"
	.bss	_flashbaseov,2,0,2
	.sym	_flashbaseov,_flashbaseov, 15, 3, 32

	.sect	".cinit"
	.align	1
	.field  	2,16
	.field  	_flashsizeov+0,16
	.field  	-1,32			; _flashsizeov @ 0

	.sect	".text"
	.bss	_flashsizeov,2,0,2
	.sym	_flashsizeov,_flashsizeov, 15, 3, 32
	.bss	_timeoutcount$1,2,0,2
	.sym	_timeoutcount,_timeoutcount$1, 15, 3, 32
;	c:\program files\ti\c5400\cgtools\bin\acp500.exe -@C:\Temp\TI2108_4 

	.sect	".text"
	.global	_SetFlashBase
	.sym	_SetFlashBase,_SetFlashBase, 32, 2, 0
	.func	59

;***************************************************************
;* FUNCTION DEF: _SetFlashBase                                 *
;***************************************************************
_SetFlashBase:
	.line	1
;----------------------------------------------------------------------
;  59 | void SetFlashBase (unsigned long val) {                                
;----------------------------------------------------------------------
;* A     assigned to _val
	.sym	_val,0, 15, 17, 32
	.sym	_val,0, 15, 1, 32
        FRAME     #-3
        NOP
        DST       A,*SP(0)              ; |59| 
	.line	2
;----------------------------------------------------------------------
;  60 | flashbaseov = val;                                                     
;----------------------------------------------------------------------
        DST       A,*(_flashbaseov)     ; |60| 
	.line	3
        FRAME     #3
        RET
        ; return occurs
	.endfunc	61,000000000h,3



	.sect	".text"
	.global	_GetFlashBase
	.sym	_GetFlashBase,_GetFlashBase, 47, 2, 0
	.func	63

;***************************************************************
;* FUNCTION DEF: _GetFlashBase                                 *
;***************************************************************
_GetFlashBase:
	.line	1
;----------------------------------------------------------------------
;  63 | unsigned long GetFlashBase (void) {                                    
;----------------------------------------------------------------------
	.line	2
;----------------------------------------------------------------------
;  64 | return (flashbaseov != 0xffffffffL ? flashbaseov : FLBASE);            
;----------------------------------------------------------------------
        RSBX      SXM
        NOP
        LD        #65535,16,A           ; |64| 
        OR        #65535,A,A            ; |64| 
        DSUB      *(_flashbaseov),A     ; |64| 
        BC        L1,AEQ                ; |64| 
        ; branch occurs ; |64| 
        BD        L2                    ; |64| 
        DLD       *(_flashbaseov),A     ; |64| 
        ; branch occurs ; |64| 
L1:    
        LD        #32768,A
L2:    
	.line	3
        RET       ; |64| 
        ; return occurs ; |64| 
	.endfunc	65,000000000h,0



	.sect	".text"
	.global	_SetFlashSize
	.sym	_SetFlashSize,_SetFlashSize, 32, 2, 0
	.func	68

;***************************************************************
;* FUNCTION DEF: _SetFlashSize                                 *
;***************************************************************
_SetFlashSize:
	.line	1
;----------------------------------------------------------------------
;  68 | void SetFlashSize (unsigned long val) {                                
;----------------------------------------------------------------------
;* A     assigned to _val
	.sym	_val,0, 15, 17, 32
	.sym	_val,0, 15, 1, 32
        FRAME     #-3
        NOP
        DST       A,*SP(0)              ; |68| 
	.line	2
;----------------------------------------------------------------------
;  69 | flashsizeov = val;                                                     
;----------------------------------------------------------------------
        DST       A,*(_flashsizeov)     ; |69| 
	.line	3
        FRAME     #3
        RET
        ; return occurs
	.endfunc	70,000000000h,3



	.sect	".text"
	.global	_GetFlashSize
	.sym	_GetFlashSize,_GetFlashSize, 47, 2, 0
	.func	72

;***************************************************************
;* FUNCTION DEF: _GetFlashSize                                 *
;***************************************************************
_GetFlashSize:
	.line	1
;----------------------------------------------------------------------
;  72 | unsigned long GetFlashSize(void) {                                     
;----------------------------------------------------------------------
	.line	2
;----------------------------------------------------------------------
;  73 | return (flashsizeov != 0xffffffffL ? flashsizeov : FLSIZEBYTES);       
;----------------------------------------------------------------------
        RSBX      SXM
        NOP
        LD        #65535,16,A           ; |73| 
        OR        #65535,A,A            ; |73| 
        DSUB      *(_flashsizeov),A     ; |73| 
        BC        L3,AEQ                ; |73| 
        ; branch occurs ; |73| 
        BD        L4                    ; |73| 
        DLD       *(_flashsizeov),A     ; |73| 
        ; branch occurs ; |73| 
L3:    
        LD        #8,16,A               ; |73| 
L4:    
	.line	3
        RET       ; |73| 
        ; return occurs ; |73| 
	.endfunc	74,000000000h,0



	.sect	".text"
	.global	_SetPage
	.sym	_SetPage,_SetPage, 32, 2, 0
	.func	77

;***************************************************************
;* FUNCTION DEF: _SetPage                                      *
;***************************************************************
_SetPage:
	.line	1
;----------------------------------------------------------------------
;  77 | void SetPage (u16 pnum) {                                              
;----------------------------------------------------------------------
;* A     assigned to _pnum
	.sym	_pnum,0, 14, 17, 16
	.sym	_pnum,0, 14, 1, 16
        FRAME     #-1
        NOP
        STL       A,*SP(0)
	.line	2
;----------------------------------------------------------------------
;  78 | port2 = pnum & 0x1f;                                                   
;----------------------------------------------------------------------
        LD        #31,A
        AND       *SP(0),A              ; |78| 
        PORTW     *(AL),02H             ; |78| 
	.line	3
        FRAME     #1
        RET
        ; return occurs
	.endfunc	79,000000000h,1



	.sect	".text"
	.global	_GetPageNum
	.sym	_GetPageNum,_GetPageNum, 46, 2, 0
	.func	95

;***************************************************************
;* FUNCTION DEF: _GetPageNum                                   *
;***************************************************************
_GetPageNum:
	.line	1
;----------------------------------------------------------------------
;  95 | u16 GetPageNum (unsigned long addr) {                                  
;----------------------------------------------------------------------
;* A     assigned to _addr
	.sym	_addr,0, 15, 17, 32
	.sym	_addr,0, 15, 1, 32
        FRAME     #-3
        NOP
        DST       A,*SP(0)              ; |95| 
	.line	2
;----------------------------------------------------------------------
;  96 | return ((u16)((addr - GetFlashBase()) / FLPAGELEN));                   
;----------------------------------------------------------------------
        CALL      #_GetFlashBase        ; |96| 
        ; call occurs [#_GetFlashBase] ; |96| 
        DRSUB     *SP(0),A              ; |96| 
        SFTL      A,#-15,A              ; |96| 
	.line	3
        FRAME     #3                    ; |96| 
        RET       ; |96| 
        ; return occurs ; |96| 
	.endfunc	97,000000000h,3



	.sect	".text"
	.global	_GetPageAddr
	.sym	_GetPageAddr,_GetPageAddr, 110, 2, 0
	.func	100

;***************************************************************
;* FUNCTION DEF: _GetPageAddr                                  *
;***************************************************************
_GetPageAddr:
	.line	1
;----------------------------------------------------------------------
; 100 | u16 *GetPageAddr (unsigned long addr) {                                
;----------------------------------------------------------------------
;* A     assigned to _addr
	.sym	_addr,0, 15, 17, 32
	.sym	_addr,0, 15, 1, 32
	.sym	_myoffset,2, 15, 1, 32
        FRAME     #-7
        NOP
        DST       A,*SP(0)              ; |100| 
	.line	2
;----------------------------------------------------------------------
; 101 | unsigned long myoffset = addr - GetFlashBase();                        
;----------------------------------------------------------------------
        CALL      #_GetFlashBase        ; |101| 
        ; call occurs [#_GetFlashBase] ; |101| 
        DRSUB     *SP(0),A              ; |101| 
        DST       A,*SP(2)              ; |101| 
	.line	4
;----------------------------------------------------------------------
; 103 | return ((u16 *)(GetFlashBase() + (myoffset % FLPAGELEN)));             
;----------------------------------------------------------------------
        CALL      #_GetFlashBase        ; |103| 
        ; call occurs [#_GetFlashBase] ; |103| 
        LD        #32767,B
        DST       A,*SP(4)              ; |103| 
        DLD       *SP(2),A              ; |103| 
        AND       A,B                   ; |103| 
        DADD      *SP(4),B,B            ; |103| 
        LD        B,A                   ; |103| 
	.line	5
        FRAME     #7                    ; |103| 
        RET       ; |103| 
        ; return occurs ; |103| 
	.endfunc	104,000000000h,7



	.sect	".text"
	.global	_GetPageMAURemaining
	.sym	_GetPageMAURemaining,_GetPageMAURemaining, 46, 2, 0
	.func	107

;***************************************************************
;* FUNCTION DEF: _GetPageMAURemaining                          *
;***************************************************************
_GetPageMAURemaining:
	.line	1
;----------------------------------------------------------------------
; 107 | u16 GetPageMAURemaining (unsigned long addr) {                         
;----------------------------------------------------------------------
;* A     assigned to _addr
	.sym	_addr,0, 15, 17, 32
	.sym	_addr,0, 15, 1, 32
	.sym	_myoffset,2, 15, 1, 32
        FRAME     #-5
        NOP
        DST       A,*SP(0)              ; |107| 
	.line	2
;----------------------------------------------------------------------
; 108 | unsigned long myoffset = addr - GetFlashBase();                        
;----------------------------------------------------------------------
        CALL      #_GetFlashBase        ; |108| 
        ; call occurs [#_GetFlashBase] ; |108| 
        DRSUB     *SP(0),A              ; |108| 
        DST       A,*SP(2)              ; |108| 
	.line	4
;----------------------------------------------------------------------
; 110 | return (FLPAGELEN - (myoffset % FLPAGELEN));                           
;----------------------------------------------------------------------
        LD        A,B
        LD        #32767,A
        AND       B,A                   ; |110| 
        RSBX      SXM
        NEG       A,A                   ; |110| 
        ADD       #32768,A              ; |110| 
	.line	5
        FRAME     #5                    ; |110| 
        RET       ; |110| 
        ; return occurs ; |110| 
	.endfunc	111,000000000h,5



	.sect	".text"
	.global	_InitFlash
	.sym	_InitFlash,_InitFlash, 32, 2, 0
	.func	117

;***************************************************************
;* FUNCTION DEF: _InitFlash                                    *
;***************************************************************
_InitFlash:
	.line	1
;----------------------------------------------------------------------
; 117 | void InitFlash (void) {                                                
;----------------------------------------------------------------------
        FRAME     #-1
	.line	2
;----------------------------------------------------------------------
; 118 | flashstart = GetFlashBase();                                           
;----------------------------------------------------------------------
        CALL      #_GetFlashBase        ; |118| 
        ; call occurs [#_GetFlashBase] ; |118| 
        DST       A,*(_flashstart)      ; |118| 
	.line	3
;----------------------------------------------------------------------
; 119 | flashnext  = flashstart;                                               
;----------------------------------------------------------------------
        DST       A,*(_flashnext)       ; |119| 
	.line	4
        FRAME     #1
        RET
        ; return occurs
	.endfunc	120,000000000h,1



	.sect	".text"
	.global	_SetFlashAddr
	.sym	_SetFlashAddr,_SetFlashAddr, 32, 2, 0
	.func	122

;***************************************************************
;* FUNCTION DEF: _SetFlashAddr                                 *
;***************************************************************
_SetFlashAddr:
	.line	1
;----------------------------------------------------------------------
; 122 | void SetFlashAddr (unsigned long addr) {                               
;----------------------------------------------------------------------
;* A     assigned to _addr
	.sym	_addr,0, 15, 17, 32
	.sym	_addr,0, 15, 1, 32
        FRAME     #-3
        NOP
        DST       A,*SP(0)              ; |122| 
	.line	2
;----------------------------------------------------------------------
; 123 | flashstart = addr;                                                     
;----------------------------------------------------------------------
        DST       A,*(_flashstart)      ; |123| 
	.line	3
;----------------------------------------------------------------------
; 124 | flashnext  = flashstart;                                               
;----------------------------------------------------------------------
        DST       A,*(_flashnext)       ; |124| 
	.line	4
        FRAME     #3
        RET
        ; return occurs
	.endfunc	125,000000000h,3



	.sect	".text"
	.global	_GetNextFlashAddr
	.sym	_GetNextFlashAddr,_GetNextFlashAddr, 110, 2, 0
	.func	127

;***************************************************************
;* FUNCTION DEF: _GetNextFlashAddr                             *
;***************************************************************
_GetNextFlashAddr:
	.line	1
;----------------------------------------------------------------------
; 127 | volatile u16 *GetNextFlashAddr (void) {                                
;----------------------------------------------------------------------
	.line	2
;----------------------------------------------------------------------
; 128 | return (volatile u16 *)flashnext;                                      
;----------------------------------------------------------------------
        LD        *(_flashnext+1),A
	.line	3
        RET       ; |128| 
        ; return occurs ; |128| 
	.endfunc	129,000000000h,0



	.sect	".text"
	.global	_EraseFlash
	.sym	_EraseFlash,_EraseFlash, 32, 2, 0
	.func	133

;***************************************************************
;* FUNCTION DEF: _EraseFlash                                   *
;***************************************************************
_EraseFlash:
	.line	1
;----------------------------------------------------------------------
; 133 | void EraseFlash(void) {                                                
;----------------------------------------------------------------------
	.sym	_p5,0, 30, 1, 16
	.sym	_pA,1, 30, 1, 16
        PSHM      AR1
        FRAME     #-2
	.line	2
;----------------------------------------------------------------------
; 134 | volatile u16 *p5 = (u16 *)(GetFlashBase()+0x5555UL);                   
;----------------------------------------------------------------------
        CALL      #_GetFlashBase        ; |134| 
        ; call occurs [#_GetFlashBase] ; |134| 
        ADD       #21845,A,A            ; |134| 
        STL       A,*SP(0)              ; |134| 
	.line	3
;----------------------------------------------------------------------
; 135 | volatile u16 *pA = (u16 *)(GetFlashBase()+0x2AAAUL);                   
;----------------------------------------------------------------------
        CALL      #_GetFlashBase        ; |135| 
        ; call occurs [#_GetFlashBase] ; |135| 
        ADD       #10922,A,A            ; |135| 
        STL       A,*SP(1)              ; |135| 
	.line	5
;----------------------------------------------------------------------
; 137 | InitFlash();                                                           
;----------------------------------------------------------------------
        CALL      #_InitFlash           ; |137| 
        ; call occurs [#_InitFlash] ; |137| 
	.line	6
;----------------------------------------------------------------------
; 138 | FlashEnable();                                                         
;----------------------------------------------------------------------
        CALL      #_FlashEnable         ; |138| 
        ; call occurs [#_FlashEnable] ; |138| 
	.line	7
;----------------------------------------------------------------------
; 139 | SetPage(0);                                                            
;----------------------------------------------------------------------
        CALLD     #_SetPage             ; |139| 
        NOP
        LD        #0,A
        ; call occurs [#_SetPage] ; |139| 
	.line	10
;----------------------------------------------------------------------
; 142 | *p5 = 0xAA;                                                            
;----------------------------------------------------------------------
        MVDK      *SP(0),*(AR1)
        ST        #170,*AR1             ; |142| 
	.line	11
;----------------------------------------------------------------------
; 143 | *pA = 0x55;                                                            
;----------------------------------------------------------------------
        MVDK      *SP(1),*(AR1)
        ST        #85,*AR1              ; |143| 
	.line	12
;----------------------------------------------------------------------
; 144 | *p5 = 0x80;                                                            
;----------------------------------------------------------------------
        MVDK      *SP(0),*(AR1)
        ST        #128,*AR1             ; |144| 
	.line	13
;----------------------------------------------------------------------
; 145 | *p5 = 0xAA;                                                            
;----------------------------------------------------------------------
        MVDK      *SP(0),*(AR1)
        ST        #170,*AR1             ; |145| 
	.line	14
;----------------------------------------------------------------------
; 146 | *pA = 0x55;                                                            
;----------------------------------------------------------------------
        MVDK      *SP(1),*(AR1)
        ST        #85,*AR1              ; |146| 
	.line	15
;----------------------------------------------------------------------
; 147 | *((u16 *)0xA000) = 0x30;                                               
;----------------------------------------------------------------------
        STM       #40960,AR1
        ST        #48,*AR1              ; |147| 
	.line	17
;----------------------------------------------------------------------
; 149 | FlashDisable();                                                        
;----------------------------------------------------------------------
        CALL      #_FlashDisable        ; |149| 
        ; call occurs [#_FlashDisable] ; |149| 
	.line	19
;----------------------------------------------------------------------
; 151 | ErsStatus = 1;                                                         
;----------------------------------------------------------------------
        ST        #1,*(_ErsStatus)      ; |151| 
	.line	22
;----------------------------------------------------------------------
; 154 | while(ErsStatus != 0) {                                                
;----------------------------------------------------------------------
        LD        *(_ErsStatus),A       ; |154| 
        BC        L7,AEQ                ; |154| 
        ; branch occurs ; |154| 
L5:    
	.line	23
;----------------------------------------------------------------------
; 155 | FlashEnable();                                                         
;----------------------------------------------------------------------
        CALL      #_FlashEnable         ; |155| 
        ; call occurs [#_FlashEnable] ; |155| 
	.line	24
;----------------------------------------------------------------------
; 156 | SetPage(0);                                                            
;----------------------------------------------------------------------
        CALLD     #_SetPage             ; |156| 
        NOP
        LD        #0,A
        ; call occurs [#_SetPage] ; |156| 
	.line	26
;----------------------------------------------------------------------
; 158 | if((*(u16 *)0xAFFF) == 0xFFFF) {                                       
;----------------------------------------------------------------------
        STM       #45055,AR1
        CMPM      *AR1,#65535           ; |158| 
        BC        L6,NTC                ; |158| 
        ; branch occurs ; |158| 
	.line	27
;----------------------------------------------------------------------
; 159 | ErsStatus = 0;                                                         
;----------------------------------------------------------------------
        ST        #0,*(_ErsStatus)      ; |159| 
L6:    
	.line	29
;----------------------------------------------------------------------
; 161 | FlashDisable();                                                        
;----------------------------------------------------------------------
        CALL      #_FlashDisable        ; |161| 
        ; call occurs [#_FlashDisable] ; |161| 
	.line	30
        LD        *(_ErsStatus),A       ; |162| 
        BC        L5,ANEQ               ; |162| 
        ; branch occurs ; |162| 
L7:    
	.line	32
;----------------------------------------------------------------------
; 164 | InitFlash();                                                           
;----------------------------------------------------------------------
        CALL      #_InitFlash           ; |164| 
        ; call occurs [#_InitFlash] ; |164| 
	.line	33
;----------------------------------------------------------------------
; 165 | FlashEnable();                                                         
;----------------------------------------------------------------------
        CALL      #_FlashEnable         ; |165| 
        ; call occurs [#_FlashEnable] ; |165| 
	.line	34
;----------------------------------------------------------------------
; 166 | SetPage(0);                                                            
;----------------------------------------------------------------------
        CALLD     #_SetPage             ; |166| 
        NOP
        LD        #0,A
        ; call occurs [#_SetPage] ; |166| 
	.line	37
;----------------------------------------------------------------------
; 169 | *p5 = 0xAA;                                                            
;----------------------------------------------------------------------
        MVDK      *SP(0),*(AR1)
        ST        #170,*AR1             ; |169| 
	.line	38
;----------------------------------------------------------------------
; 170 | *pA = 0x55;                                                            
;----------------------------------------------------------------------
        MVDK      *SP(1),*(AR1)
        ST        #85,*AR1              ; |170| 
	.line	39
;----------------------------------------------------------------------
; 171 | *p5 = 0x80;                                                            
;----------------------------------------------------------------------
        MVDK      *SP(0),*(AR1)
        ST        #128,*AR1             ; |171| 
	.line	40
;----------------------------------------------------------------------
; 172 | *p5 = 0xAA;                                                            
;----------------------------------------------------------------------
        MVDK      *SP(0),*(AR1)
        ST        #170,*AR1             ; |172| 
	.line	41
;----------------------------------------------------------------------
; 173 | *pA = 0x55;                                                            
;----------------------------------------------------------------------
        MVDK      *SP(1),*(AR1)
        ST        #85,*AR1              ; |173| 
	.line	42
;----------------------------------------------------------------------
; 174 | *((u16 *)0xB000) = 0x30;                                               
;----------------------------------------------------------------------
        STM       #45056,AR1
        ST        #48,*AR1              ; |174| 
	.line	44
;----------------------------------------------------------------------
; 176 | FlashDisable();                                                        
;----------------------------------------------------------------------
        CALL      #_FlashDisable        ; |176| 
        ; call occurs [#_FlashDisable] ; |176| 
	.line	46
;----------------------------------------------------------------------
; 178 | ErsStatus = 1;                                                         
;----------------------------------------------------------------------
        ST        #1,*(_ErsStatus)      ; |178| 
	.line	49
;----------------------------------------------------------------------
; 181 | while(ErsStatus != 0) {                                                
;----------------------------------------------------------------------
        LD        *(_ErsStatus),A       ; |181| 
        BC        L10,AEQ               ; |181| 
        ; branch occurs ; |181| 
L8:    
	.line	50
;----------------------------------------------------------------------
; 182 | FlashEnable();                                                         
;----------------------------------------------------------------------
        CALL      #_FlashEnable         ; |182| 
        ; call occurs [#_FlashEnable] ; |182| 
	.line	51
;----------------------------------------------------------------------
; 183 | SetPage(0);                                                            
;----------------------------------------------------------------------
        CALLD     #_SetPage             ; |183| 
        NOP
        LD        #0,A
        ; call occurs [#_SetPage] ; |183| 
	.line	53
;----------------------------------------------------------------------
; 185 | if((*(u16 *)0xBFFF) == 0xFFFF) {                                       
;----------------------------------------------------------------------
        STM       #49151,AR1
        CMPM      *AR1,#65535           ; |185| 
        BC        L9,NTC                ; |185| 
        ; branch occurs ; |185| 
	.line	54
;----------------------------------------------------------------------
; 186 | ErsStatus = 0;                                                         
;----------------------------------------------------------------------
        ST        #0,*(_ErsStatus)      ; |186| 
L9:    
	.line	56
;----------------------------------------------------------------------
; 188 | FlashDisable();                                                        
;----------------------------------------------------------------------
        CALL      #_FlashDisable        ; |188| 
        ; call occurs [#_FlashDisable] ; |188| 
	.line	57
        LD        *(_ErsStatus),A       ; |189| 
        BC        L8,ANEQ               ; |189| 
        ; branch occurs ; |189| 
L10:    
	.line	58
        FRAME     #2
        POPM      AR1
        RET
        ; return occurs
	.endfunc	190,000000400h,3



	.sect	".text"
	.global	_flashWordWrite
	.sym	_flashWordWrite,_flashWordWrite, 32, 2, 0
	.func	210

;***************************************************************
;* FUNCTION DEF: _flashWordWrite                               *
;***************************************************************
_flashWordWrite:
	.line	1
;----------------------------------------------------------------------
; 210 | void flashWordWrite (u16* dstAddress, short data) {                    
;----------------------------------------------------------------------
;* A     assigned to _dstAddress
	.sym	_dstAddress,0, 30, 17, 16
	.sym	_data,10, 3, 9, 16
	.sym	_dstAddress,0, 30, 1, 16
	.sym	_p5,1, 30, 1, 16
	.sym	_pA,2, 30, 1, 16
	.sym	_timeoutcount,4, 15, 1, 32
	.sym	_pBurn,6, 30, 1, 16
	.sym	_page,7, 14, 1, 16
        PSHM      AR1
        FRAME     #-8
        NOP
        STL       A,*SP(0)
	.line	4
;----------------------------------------------------------------------
; 213 | volatile u16 *p5 = (u16 *)(GetFlashBase()+0x5555UL);                   
;----------------------------------------------------------------------
        CALL      #_GetFlashBase        ; |213| 
        ; call occurs [#_GetFlashBase] ; |213| 
        ADD       #21845,A,A            ; |213| 
        STL       A,*SP(1)              ; |213| 
	.line	5
;----------------------------------------------------------------------
; 214 | volatile u16 *pA = (u16 *)(GetFlashBase()+0x2AAAUL);                   
; 215 | unsigned long timeoutcount;                                            
; 216 | volatile u16 *pBurn;                                                   
; 217 | u16           page;                                                    
;----------------------------------------------------------------------
        CALL      #_GetFlashBase        ; |214| 
        ; call occurs [#_GetFlashBase] ; |214| 
        ADD       #10922,A,A            ; |214| 
        STL       A,*SP(2)              ; |214| 
	.line	10
;----------------------------------------------------------------------
; 219 | FlashEnable();                                                         
;----------------------------------------------------------------------
        CALL      #_FlashEnable         ; |219| 
        ; call occurs [#_FlashEnable] ; |219| 
	.line	13
;----------------------------------------------------------------------
; 222 | pBurn = dstAddress;                                                    
;----------------------------------------------------------------------
        LD        *SP(0),A
        STL       A,*SP(6)
	.line	16
;----------------------------------------------------------------------
; 225 | page = GetPageNum(flashnext);                                          
;----------------------------------------------------------------------
        DLD       *(_flashnext),A       ; |225| 
        CALL      #_GetPageNum          ; |225| 
        ; call occurs [#_GetPageNum] ; |225| 
        STL       A,*SP(7)
	.line	18
;----------------------------------------------------------------------
; 227 | SetPage(0);                                                            
;----------------------------------------------------------------------
        CALLD     #_SetPage             ; |227| 
        NOP
        LD        #0,A
        ; call occurs [#_SetPage] ; |227| 
	.line	20
;----------------------------------------------------------------------
; 229 | *p5 = 0xaa;                                                            
;----------------------------------------------------------------------
        MVDK      *SP(1),*(AR1)
        ST        #170,*AR1             ; |229| 
	.line	21
;----------------------------------------------------------------------
; 230 | *pA = 0x55;                                                            
;----------------------------------------------------------------------
        MVDK      *SP(2),*(AR1)
        ST        #85,*AR1              ; |230| 
	.line	22
;----------------------------------------------------------------------
; 231 | *p5 = 0xa0;                                                            
;----------------------------------------------------------------------
        MVDK      *SP(1),*(AR1)
        ST        #160,*AR1             ; |231| 
	.line	24
;----------------------------------------------------------------------
; 233 | SetPage(page);                                                         
;----------------------------------------------------------------------
        LD        *SP(7),A
        CALL      #_SetPage             ; |233| 
        ; call occurs [#_SetPage] ; |233| 
	.line	26
;----------------------------------------------------------------------
; 235 | *pBurn = data;                                                         
;----------------------------------------------------------------------
        LD        *SP(10),A
        MVDK      *SP(6),*(AR1)
        STL       A,*AR1
	.line	28
;----------------------------------------------------------------------
; 237 | timeoutcount = 0;                                                      
; 238 | do {                                                                   
;----------------------------------------------------------------------
        LD        #0,A
        DST       A,*SP(4)              ; |237| 
L11:    
	.line	30
;----------------------------------------------------------------------
; 239 | timeoutcount += 1;                                                     
;----------------------------------------------------------------------
        DLD       *SP(4),A              ; |239| 
        ADD       #1,A                  ; |239| 
        DST       A,*SP(4)              ; |239| 
	.line	31
;----------------------------------------------------------------------
; 240 | } while(*pBurn != data && timeoutcount < 0xffff);                      
;----------------------------------------------------------------------
        MVDK      *SP(6),*(AR1)
        LD        *AR1,A                ; |240| 
        SUB       *SP(10),A             ; |240| 
        BC        L12,AEQ               ; |240| 
        ; branch occurs ; |240| 
        RSBX      SXM
        NOP
        LD        #65535,A
        DSUB      *SP(4),A              ; |240| 
        BC        L11,AGT               ; |240| 
        ; branch occurs ; |240| 
L12:    
	.line	33
;----------------------------------------------------------------------
; 242 | SetPage(0);                                                            
;----------------------------------------------------------------------
        CALLD     #_SetPage             ; |242| 
        NOP
        LD        #0,A
        ; call occurs [#_SetPage] ; |242| 
	.line	34
;----------------------------------------------------------------------
; 243 | FlashDisable();                                                        
;----------------------------------------------------------------------
        CALL      #_FlashDisable        ; |243| 
        ; call occurs [#_FlashDisable] ; |243| 
	.line	35
        FRAME     #8
        POPM      AR1
        RET
        ; return occurs
	.endfunc	244,000000400h,9



	.sect	".text"
	.global	_BurnFlash
	.sym	_BurnFlash,_BurnFlash, 32, 2, 0
	.func	247

;***************************************************************
;* FUNCTION DEF: _BurnFlash                                    *
;***************************************************************
_BurnFlash:
	.line	1
;----------------------------------------------------------------------
; 247 | void BurnFlash(u16 *data, u16 nBytes) {                                
;----------------------------------------------------------------------
;* A     assigned to _data
	.sym	_data,0, 30, 17, 16
	.sym	_nBytes,10, 14, 9, 16
	.sym	_data,0, 30, 1, 16
	.sym	_p5,1, 30, 1, 16
	.sym	_pA,2, 30, 1, 16
	.sym	_pF,3, 30, 1, 16
	.sym	_pBurn,4, 30, 1, 16
	.sym	_page,5, 14, 1, 16
	.sym	_pagelast,6, 14, 1, 16
	.sym	_nWords,7, 4, 1, 16
        PSHM      AR1
        FRAME     #-8
        NOP
        STL       A,*SP(0)
	.line	3
;----------------------------------------------------------------------
; 249 | volatile u16 *p5 = (u16 *)(GetFlashBase()+0x5555UL);                   
;----------------------------------------------------------------------
        CALL      #_GetFlashBase        ; |249| 
        ; call occurs [#_GetFlashBase] ; |249| 
        ADD       #21845,A,A            ; |249| 
        STL       A,*SP(1)              ; |249| 
	.line	4
;----------------------------------------------------------------------
; 250 | volatile u16 *pA = (u16 *)(GetFlashBase()+0x2AAAUL);                   
;----------------------------------------------------------------------
        CALL      #_GetFlashBase        ; |250| 
        ; call occurs [#_GetFlashBase] ; |250| 
        ADD       #10922,A,A            ; |250| 
        STL       A,*SP(2)              ; |250| 
	.line	5
;----------------------------------------------------------------------
; 251 | volatile u16 *pF = (u16 *)(GetFlashBase());                            
; 253 | volatile u16 *pBurn;                                                   
; 254 | u16 page, pagelast;                                                    
; 255 | static unsigned long timeoutcount;                                     
;----------------------------------------------------------------------
        CALL      #_GetFlashBase        ; |251| 
        ; call occurs [#_GetFlashBase] ; |251| 
        STL       A,*SP(3)
	.line	10
;----------------------------------------------------------------------
; 256 | int nWords = nBytes >> 1;                                              
;----------------------------------------------------------------------
        LDU       *SP(10),A
        STL       A,#-1,*SP(7)
	.line	12
;----------------------------------------------------------------------
; 258 | if(nWords <= 0) {                                                      
;----------------------------------------------------------------------
        SSBX      SXM
        NOP
        LD        *SP(7),A              ; |258| 
        BC        L22,ALEQ              ; |258| 
        ; branch occurs ; |258| 
	.line	13
;----------------------------------------------------------------------
; 259 | return;                                                                
;----------------------------------------------------------------------
	.line	17
;----------------------------------------------------------------------
; 263 | page     = GetPageNum(flashnext);                                      
;----------------------------------------------------------------------
        DLD       *(_flashnext),A       ; |263| 
        CALL      #_GetPageNum          ; |263| 
        ; call occurs [#_GetPageNum] ; |263| 
        STL       A,*SP(5)
	.line	18
;----------------------------------------------------------------------
; 264 | pagelast = GetPageNum(flashnext + nWords - 1);                         
;----------------------------------------------------------------------
        SSBX      SXM
        NOP
        LD        *SP(7),A              ; |264| 
        DADD      *(_flashnext),A,A     ; |264| 
        CALLD     #_GetPageNum          ; |264| 
        SUB       #1,A,A                ; |264| 
        ; call occurs [#_GetPageNum] ; |264| 
        STL       A,*SP(6)
	.line	20
;----------------------------------------------------------------------
; 266 | FlashEnable();                                                         
;----------------------------------------------------------------------
        CALL      #_FlashEnable         ; |266| 
        ; call occurs [#_FlashEnable] ; |266| 
	.line	22
;----------------------------------------------------------------------
; 268 | if(pagelast == page) {                                                 
;----------------------------------------------------------------------
        LD        *SP(6),A              ; |268| 
        SUB       *SP(5),A              ; |268| 
        BC        L17,ANEQ              ; |268| 
        ; branch occurs ; |268| 
	.line	24
;----------------------------------------------------------------------
; 270 | pBurn      = GetPageAddr(flashnext);                                   
;----------------------------------------------------------------------
        DLD       *(_flashnext),A       ; |270| 
        CALL      #_GetPageAddr         ; |270| 
        ; call occurs [#_GetPageAddr] ; |270| 
        STL       A,*SP(4)
	.line	25
;----------------------------------------------------------------------
; 271 | flashnext += nWords; /* For next time */                               
;----------------------------------------------------------------------
        SSBX      SXM
        NOP
        LD        *SP(7),A              ; |271| 
        DADD      *(_flashnext),A,A     ; |271| 
        DST       A,*(_flashnext)       ; |271| 
	.line	27
;----------------------------------------------------------------------
; 273 | SetPage(0);                                                            
;----------------------------------------------------------------------
        CALLD     #_SetPage             ; |273| 
        NOP
        LD        #0,A
        ; call occurs [#_SetPage] ; |273| 
	.line	28
;----------------------------------------------------------------------
; 274 | *p5 = 0xaa;                                                            
;----------------------------------------------------------------------
        MVDK      *SP(1),*(AR1)
        ST        #170,*AR1             ; |274| 
	.line	29
;----------------------------------------------------------------------
; 275 | *pA = 0x55;                                                            
;----------------------------------------------------------------------
        MVDK      *SP(2),*(AR1)
        ST        #85,*AR1              ; |275| 
	.line	30
;----------------------------------------------------------------------
; 276 | *p5 = 0x20;                                                            
;----------------------------------------------------------------------
        MVDK      *SP(1),*(AR1)
        ST        #32,*AR1              ; |276| 
	.line	32
;----------------------------------------------------------------------
; 278 | while(nWords-- > 0) {                                                  
;----------------------------------------------------------------------
        SSBX      SXM
        NOP
        LD        *SP(7),A
        SUB       #1,A,B                ; |278| 
        BCD       L16,ALEQ              ; |278| 
        NOP
        STL       B,*SP(7)
        ; branch occurs ; |278| 
L13:    
	.line	33
;----------------------------------------------------------------------
; 279 | timeoutcount = 0;                                                      
;----------------------------------------------------------------------
        LD        #0,A
        DST       A,*(_timeoutcount$1)  ; |279| 
	.line	35
;----------------------------------------------------------------------
; 281 | SetPage(0);                                                            
;----------------------------------------------------------------------
        CALLD     #_SetPage             ; |281| 
        NOP
        LD        #0,A
        ; call occurs [#_SetPage] ; |281| 
	.line	36
;----------------------------------------------------------------------
; 282 | *pF = 0xa0;                                                            
;----------------------------------------------------------------------
        MVDK      *SP(3),*(AR1)
        ST        #160,*AR1             ; |282| 
	.line	38
;----------------------------------------------------------------------
; 284 | SetPage(page);                                                         
;----------------------------------------------------------------------
        LD        *SP(5),A
        CALL      #_SetPage             ; |284| 
        ; call occurs [#_SetPage] ; |284| 
	.line	39
;----------------------------------------------------------------------
; 285 | *pBurn = *data;                                                        
;----------------------------------------------------------------------
        MVDK      *SP(0),*(AR2)
        MVDK      *SP(4),*(AR3)
        MVDD      *AR2,*AR3             ; |285| 
	.line	41
;----------------------------------------------------------------------
; 287 | while (*pBurn != *data) {                                              
;----------------------------------------------------------------------
        MVDK      *SP(4),*(AR2)
        MVDK      *SP(0),*(AR1)
        LD        *AR2,A                ; |287| 
        SUB       *AR1,A                ; |287| 
        BC        L15,AEQ               ; |287| 
        ; branch occurs ; |287| 
L14:    
	.line	42
;----------------------------------------------------------------------
; 288 | timeoutcount++;                                                        
;----------------------------------------------------------------------
        DLD       *(_timeoutcount$1),A  ; |288| 
        ADD       #1,A                  ; |288| 
        DST       A,*(_timeoutcount$1)  ; |288| 
	.line	43
        MVDK      *SP(4),*(AR1)
        MVDK      *SP(0),*(AR2)
        LD        *AR1,A                ; |289| 
        SUB       *AR2,A                ; |289| 
        BC        L14,ANEQ              ; |289| 
        ; branch occurs ; |289| 
L15:    
	.line	45
;----------------------------------------------------------------------
; 291 | pBurn++;                                                               
;----------------------------------------------------------------------
        ADDM      #1,*SP(4)             ; |291| 
	.line	46
;----------------------------------------------------------------------
; 292 | data++;                                                                
;----------------------------------------------------------------------
        ADDM      #1,*SP(0)             ; |292| 
	.line	47
        SSBX      SXM
        NOP
        LD        *SP(7),A
        SUB       #1,A,B                ; |293| 
        BCD       L13,AGT               ; |293| 
        NOP
        STL       B,*SP(7)
        ; branch occurs ; |293| 
L16:    
	.line	50
;----------------------------------------------------------------------
; 296 | *pF = 0x90;                                                            
;----------------------------------------------------------------------
        MVDK      *SP(3),*(AR1)
        ST        #144,*AR1             ; |296| 
	.line	51
;----------------------------------------------------------------------
; 297 | *pF = 0x00;                                                            
;----------------------------------------------------------------------
        MVDK      *SP(3),*(AR1)
        ST        #0,*AR1               ; |297| 
	.line	53
;----------------------------------------------------------------------
; 299 | } else {                                                               
;----------------------------------------------------------------------
        B         L21                   ; |299| 
        ; branch occurs ; |299| 
L17:    
	.line	56
;----------------------------------------------------------------------
; 302 | while(nWords-- > 0) {                                                  
;----------------------------------------------------------------------
        SSBX      SXM
        NOP
        LD        *SP(7),A
        SUB       #1,A,B                ; |302| 
        BCD       L21,ALEQ              ; |302| 
        NOP
        STL       B,*SP(7)
        ; branch occurs ; |302| 
L18:    
	.line	57
;----------------------------------------------------------------------
; 303 | timeoutcount = 0;                                                      
;----------------------------------------------------------------------
        LD        #0,A
        DST       A,*(_timeoutcount$1)  ; |303| 
	.line	59
;----------------------------------------------------------------------
; 305 | SetPage(0);                                                            
;----------------------------------------------------------------------
        CALLD     #_SetPage             ; |305| 
        NOP
        LD        #0,A
        ; call occurs [#_SetPage] ; |305| 
	.line	60
;----------------------------------------------------------------------
; 306 | *pF = 0xa0;                                                            
;----------------------------------------------------------------------
        MVDK      *SP(3),*(AR1)
        ST        #160,*AR1             ; |306| 
	.line	62
;----------------------------------------------------------------------
; 308 | SetPage(page);                                                         
;----------------------------------------------------------------------
        LD        *SP(5),A
        CALL      #_SetPage             ; |308| 
        ; call occurs [#_SetPage] ; |308| 
	.line	63
;----------------------------------------------------------------------
; 309 | *pBurn = *data;                                                        
;----------------------------------------------------------------------
        MVDK      *SP(0),*(AR3)
        MVDK      *SP(4),*(AR2)
        MVDD      *AR3,*AR2             ; |309| 
	.line	65
;----------------------------------------------------------------------
; 311 | while (*pBurn != *data) {                                              
;----------------------------------------------------------------------
        MVDK      *SP(0),*(AR2)
        MVDK      *SP(4),*(AR1)
        LD        *AR1,A                ; |311| 
        SUB       *AR2,A                ; |311| 
        BC        L20,AEQ               ; |311| 
        ; branch occurs ; |311| 
L19:    
	.line	66
;----------------------------------------------------------------------
; 312 | timeoutcount++;                                                        
;----------------------------------------------------------------------
        DLD       *(_timeoutcount$1),A  ; |312| 
        ADD       #1,A                  ; |312| 
        DST       A,*(_timeoutcount$1)  ; |312| 
	.line	67
        MVDK      *SP(4),*(AR2)
        MVDK      *SP(0),*(AR1)
        LD        *AR2,A                ; |313| 
        SUB       *AR1,A                ; |313| 
        BC        L19,ANEQ              ; |313| 
        ; branch occurs ; |313| 
L20:    
	.line	69
;----------------------------------------------------------------------
; 315 | pBurn++;                                                               
;----------------------------------------------------------------------
        ADDM      #1,*SP(4)             ; |315| 
	.line	70
;----------------------------------------------------------------------
; 316 | data++;                                                                
;----------------------------------------------------------------------
        ADDM      #1,*SP(0)             ; |316| 
	.line	71
;----------------------------------------------------------------------
; 317 | flashnext++;                                                           
;----------------------------------------------------------------------
        DLD       *(_flashnext),A       ; |317| 
        ADD       #1,A                  ; |317| 
        DST       A,*(_flashnext)       ; |317| 
	.line	72
        SSBX      SXM
        NOP
        LD        *SP(7),A
        SUB       #1,A,B                ; |318| 
        BCD       L18,AGT               ; |318| 
        NOP
        STL       B,*SP(7)
        ; branch occurs ; |318| 
L21:    
	.line	75
;----------------------------------------------------------------------
; 321 | SetPage(0);                                                            
;----------------------------------------------------------------------
        CALLD     #_SetPage             ; |321| 
        NOP
        LD        #0,A
        ; call occurs [#_SetPage] ; |321| 
	.line	76
;----------------------------------------------------------------------
; 322 | FlashDisable();                                                        
;----------------------------------------------------------------------
        CALL      #_FlashDisable        ; |322| 
        ; call occurs [#_FlashDisable] ; |322| 
L22:    
	.line	77
        FRAME     #8
        POPM      AR1
        RET
        ; return occurs
	.endfunc	323,000000400h,9



	.sect	".text"
	.global	_CKSSet
	.sym	_CKSSet,_CKSSet, 32, 2, 0
	.func	329

;***************************************************************
;* FUNCTION DEF: _CKSSet                                       *
;***************************************************************
_CKSSet:
	.line	1
;----------------------------------------------------------------------
; 329 | void CKSSet (u16 val) {                                                
;----------------------------------------------------------------------
;* A     assigned to _val
	.sym	_val,0, 14, 17, 16
	.sym	_val,0, 14, 1, 16
        FRAME     #-1
        NOP
        STL       A,*SP(0)
	.line	2
;----------------------------------------------------------------------
; 330 | cksum = val;                                                           
;----------------------------------------------------------------------
        LDM       AL,A                  ; |330| 
        DST       A,*(_cksum)           ; |330| 
	.line	3
        FRAME     #1
        RET
        ; return occurs
	.endfunc	331,000000000h,1



	.sect	".text"
	.global	_CKSGet
	.sym	_CKSGet,_CKSGet, 46, 2, 0
	.func	333

;***************************************************************
;* FUNCTION DEF: _CKSGet                                       *
;***************************************************************
_CKSGet:
	.line	1
;----------------------------------------------------------------------
; 333 | u16 CKSGet (void) {                                                    
;----------------------------------------------------------------------
	.line	2
;----------------------------------------------------------------------
; 334 | return ((u16)cksum);                                                   
;----------------------------------------------------------------------
        LD        *(_cksum+1),A
	.line	3
        RET       ; |334| 
        ; return occurs ; |334| 
	.endfunc	335,000000000h,0



	.sect	".text"
	.global	_CKSAccumBuf
	.sym	_CKSAccumBuf,_CKSAccumBuf, 46, 2, 0
	.func	338

;***************************************************************
;* FUNCTION DEF: _CKSAccumBuf                                  *
;***************************************************************
_CKSAccumBuf:
	.line	1
;----------------------------------------------------------------------
; 338 | u16 CKSAccumBuf (unsigned long bufptr, unsigned long len) {            
;----------------------------------------------------------------------
;* A     assigned to _bufptr
	.sym	_bufptr,0, 15, 17, 32
	.sym	_len,10, 15, 9, 32
	.sym	_bufptr,0, 15, 1, 32
	.sym	_page,2, 14, 1, 16
	.sym	_pPage,3, 30, 1, 16
	.sym	_n,4, 5, 1, 32
        PSHM      AR1
        FRAME     #-8
        NOP
;----------------------------------------------------------------------
; 340 | u16   page;                                                            
; 341 | u16 * pPage;                                                           
; 342 | long  n;                                                               
;----------------------------------------------------------------------
        DST       A,*SP(0)              ; |338| 
	.line	7
;----------------------------------------------------------------------
; 344 | len /= BYTESPERMAU;  // MAUs                                           
;----------------------------------------------------------------------
        RSBX      SXM
        NOP
        DLD       *SP(10),A
        SFTL      A,#-1,A               ; |344| 
        DST       A,*SP(10)             ; |344| 
	.line	9
;----------------------------------------------------------------------
; 346 | bufptr &= 0x0000FFFF;                                                  
;----------------------------------------------------------------------
        DLD       *SP(0),B              ; |346| 
        LD        #65535,A
        AND       B,A                   ; |346| 
        DST       A,*SP(0)              ; |346| 
	.line	11
;----------------------------------------------------------------------
; 348 | while (len > 0) {                                                      
;----------------------------------------------------------------------
        DLD       *SP(10),A             ; |348| 
        BC        L29,AEQ               ; |348| 
        ; branch occurs ; |348| 
L23:    
	.line	13
;----------------------------------------------------------------------
; 350 | page = GetPageNum(bufptr);                                             
;----------------------------------------------------------------------
        DLD       *SP(0),A              ; |350| 
        CALL      #_GetPageNum          ; |350| 
        ; call occurs [#_GetPageNum] ; |350| 
        STL       A,*SP(2)
	.line	14
;----------------------------------------------------------------------
; 351 | n = GetPageMAURemaining(bufptr);                                       
;----------------------------------------------------------------------
        DLD       *SP(0),A              ; |351| 
        CALL      #_GetPageMAURemaining ; |351| 
        ; call occurs [#_GetPageMAURemaining] ; |351| 
        NOP
        LDM       AL,A                  ; |351| 
        DST       A,*SP(4)              ; |351| 
	.line	15
;----------------------------------------------------------------------
; 352 | if (n > len) {                                                         
;----------------------------------------------------------------------
        RSBX      SXM
        NOP
        DLD       *SP(10),A
        DSUB      *SP(4),A              ; |352| 
        BC        L24,AGEQ              ; |352| 
        ; branch occurs ; |352| 
	.line	16
;----------------------------------------------------------------------
; 353 | n = len;                                                               
;----------------------------------------------------------------------
        DLD       *SP(10),A             ; |353| 
        DST       A,*SP(4)              ; |353| 
L24:    
	.line	18
;----------------------------------------------------------------------
; 355 | len -= n;    // for next time thru                                     
;----------------------------------------------------------------------
        DLD       *SP(4),A              ; |355| 
        DRSUB     *SP(10),A             ; |355| 
        DST       A,*SP(10)             ; |355| 
	.line	21
;----------------------------------------------------------------------
; 358 | pPage = GetPageAddr(bufptr);                                           
;----------------------------------------------------------------------
        DLD       *SP(0),A              ; |358| 
        CALL      #_GetPageAddr         ; |358| 
        ; call occurs [#_GetPageAddr] ; |358| 
        STL       A,*SP(3)
	.line	22
;----------------------------------------------------------------------
; 359 | bufptr += n;                                                           
;----------------------------------------------------------------------
        DLD       *SP(4),A              ; |359| 
        DADD      *SP(0),A,A            ; |359| 
        DST       A,*SP(0)              ; |359| 
	.line	24
;----------------------------------------------------------------------
; 361 | SetPage(page);                                                         
;----------------------------------------------------------------------
        LD        *SP(2),A
        CALL      #_SetPage             ; |361| 
        ; call occurs [#_SetPage] ; |361| 
	.line	27
;----------------------------------------------------------------------
; 364 | while (n-- > 0) {                                                      
;----------------------------------------------------------------------
        SSBX      SXM
        NOP
        DLD       *SP(4),A
        SUB       #1,A,B                ; |364| 
        BCD       L28,ALEQ              ; |364| 
        NOP
        DST       B,*SP(4)              ; |364| 
        ; branch occurs ; |364| 
L25:    
	.sym	_val,6, 15, 1, 32
	.block	27
	.line	28
;----------------------------------------------------------------------
; 365 | unsigned long val = *pPage++;                                          
;----------------------------------------------------------------------
        MVDK      *SP(3),*(AR1)
        LDU       *AR1+,A
        MVKD      *(AR1),*SP(3)
        DST       A,*SP(6)              ; |365| 
	.line	29
;----------------------------------------------------------------------
; 366 | cksum += val >> 8;          //MSB                                      
;----------------------------------------------------------------------
        RSBX      SXM
        NOP
        DLD       *SP(6),A
        SFTL      A,#-8,A               ; |366| 
        DADD      *(_cksum),A,A         ; |366| 
        DST       A,*(_cksum)           ; |366| 
	.line	30
;----------------------------------------------------------------------
; 367 | if (cksum >= 65536) {                                                  
;----------------------------------------------------------------------
        LD        #1,16,A               ; |367| 
        DSUB      *(_cksum),A           ; |367| 
        BC        L26,AGT               ; |367| 
        ; branch occurs ; |367| 
	.line	31
;----------------------------------------------------------------------
; 368 | cksum += 1;                                                            
;----------------------------------------------------------------------
        DLD       *(_cksum),A           ; |368| 
        ADD       #1,A                  ; |368| 
        DST       A,*(_cksum)           ; |368| 
	.line	32
;----------------------------------------------------------------------
; 369 | cksum &= 0xffff;                                                       
;----------------------------------------------------------------------
        LD        A,B
        LD        #65535,A
        AND       B,A                   ; |369| 
        DST       A,*(_cksum)           ; |369| 
L26:    
	.line	35
;----------------------------------------------------------------------
; 372 | cksum += val & 0x000000ff;  // LSB                                     
;----------------------------------------------------------------------
        DLD       *SP(6),B              ; |372| 
        LD        #255,A
        AND       B,A                   ; |372| 
        DADD      *(_cksum),A,A         ; |372| 
        DST       A,*(_cksum)           ; |372| 
	.line	37
;----------------------------------------------------------------------
; 374 | if(cksum >= 65536) {                                                   
;----------------------------------------------------------------------
        LD        #1,16,A               ; |374| 
        DSUB      *(_cksum),A           ; |374| 
        BC        L27,AGT               ; |374| 
        ; branch occurs ; |374| 
	.line	38
;----------------------------------------------------------------------
; 375 | cksum += 1;                                                            
;----------------------------------------------------------------------
        DLD       *(_cksum),A           ; |375| 
        ADD       #1,A                  ; |375| 
        DST       A,*(_cksum)           ; |375| 
	.line	39
;----------------------------------------------------------------------
; 376 | cksum &= 0xffff;                                                       
;----------------------------------------------------------------------
        LD        A,B
        LD        #65535,A
        AND       B,A                   ; |376| 
        DST       A,*(_cksum)           ; |376| 
L27:    
	.endblock	40
	.line	41
        SSBX      SXM
        NOP
        DLD       *SP(4),A
        SUB       #1,A,B                ; |378| 
        BCD       L25,AGT               ; |378| 
        NOP
        DST       B,*SP(4)              ; |378| 
        ; branch occurs ; |378| 
L28:    
	.line	43
;----------------------------------------------------------------------
; 380 | SetPage(0);                                                            
;----------------------------------------------------------------------
        CALLD     #_SetPage             ; |380| 
        NOP
        LD        #0,A
        ; call occurs [#_SetPage] ; |380| 
	.line	44
        DLD       *SP(10),A             ; |381| 
        BC        L23,ANEQ              ; |381| 
        ; branch occurs ; |381| 
L29:    
	.line	46
;----------------------------------------------------------------------
; 383 | return ((u16)cksum);                                                   
;----------------------------------------------------------------------
        LD        *(_cksum+1),A
	.line	47
        FRAME     #8                    ; |383| 
        POPM      AR1                   ; |383| 
        RET       ; |383| 
        ; return occurs ; |383| 
	.endfunc	384,000000400h,9



	.sect	".text"
	.global	_GetFlashVal
	.sym	_GetFlashVal,_GetFlashVal, 46, 2, 0
	.func	386

;***************************************************************
;* FUNCTION DEF: _GetFlashVal                                  *
;***************************************************************
_GetFlashVal:
	.line	1
;----------------------------------------------------------------------
; 386 | u16 GetFlashVal (unsigned long addr) {                                 
;----------------------------------------------------------------------
;* A     assigned to _addr
	.sym	_addr,0, 15, 17, 32
	.sym	_addr,0, 15, 1, 32
	.sym	_myval,2, 14, 1, 16
        PSHM      AR1
        FRAME     #-4
        NOP
;----------------------------------------------------------------------
; 387 | u16 myval;                                                             
;----------------------------------------------------------------------
        DST       A,*SP(0)              ; |386| 
	.line	4
;----------------------------------------------------------------------
; 389 | SetPage(GetPageNum(addr));                                             
;----------------------------------------------------------------------
        CALL      #_GetPageNum          ; |389| 
        ; call occurs [#_GetPageNum] ; |389| 
        CALL      #_SetPage             ; |389| 
        ; call occurs [#_SetPage] ; |389| 
	.line	5
;----------------------------------------------------------------------
; 390 | myval = *GetPageAddr(addr);                                            
;----------------------------------------------------------------------
        DLD       *SP(0),A              ; |390| 
        CALL      #_GetPageAddr         ; |390| 
        ; call occurs [#_GetPageAddr] ; |390| 
        STLM      A,AR1
        NOP
        NOP
        LD        *AR1,A
        STL       A,*SP(2)
	.line	7
;----------------------------------------------------------------------
; 392 | return myval;                                                          
;----------------------------------------------------------------------
	.line	8
        FRAME     #4                    ; |392| 
        POPM      AR1                   ; |392| 
        RET       ; |392| 
        ; return occurs ; |392| 
	.endfunc	393,000000400h,5



	.sect	".text"
	.global	_SendFlashBufToHost
	.sym	_SendFlashBufToHost,_SendFlashBufToHost, 32, 2, 0
	.func	395

;***************************************************************
;* FUNCTION DEF: _SendFlashBufToHost                           *
;***************************************************************
_SendFlashBufToHost:
	.line	1
;----------------------------------------------------------------------
; 395 | void SendFlashBufToHost (u16 cmd, unsigned long addr, u16 bytecount) { 
;----------------------------------------------------------------------
;* A     assigned to _cmd
	.sym	_cmd,0, 14, 17, 16
	.sym	_addr,12, 15, 9, 32
	.sym	_bytecount,14, 14, 9, 16
	.sym	_cmd,0, 14, 1, 16
	.sym	_pagememptr,1, 30, 1, 16
	.sym	_pagestart,2, 14, 1, 16
	.sym	_pagelast,3, 14, 1, 16
	.sym	_i,4, 14, 1, 16
	.sym	_n,5, 14, 1, 16
        PSHM      AR1
        FRAME     #-10
        NOP
;----------------------------------------------------------------------
; 396 | u16 *pagememptr;                                                       
; 397 | u16 pagestart;                                                         
; 398 | u16 pagelast;                                                          
; 399 | u16 i;                                                                 
; 400 | u16 n;                                                                 
;----------------------------------------------------------------------
        STL       A,*SP(0)
	.line	8
;----------------------------------------------------------------------
; 402 | pagestart = GetPageNum(addr);                                          
;----------------------------------------------------------------------
        DLD       *SP(12),A             ; |402| 
        CALL      #_GetPageNum          ; |402| 
        ; call occurs [#_GetPageNum] ; |402| 
        STL       A,*SP(2)
	.line	9
;----------------------------------------------------------------------
; 403 | pagelast  = GetPageNum(addr + bytecount / BYTESPERMAU - 1);            
;----------------------------------------------------------------------
        RSBX      SXM
        LD        *SP(14),#-1,A         ; |403| 
        DADD      *SP(12),A,A           ; |403| 
        CALLD     #_GetPageNum          ; |403| 
        SUB       #1,A,A                ; |403| 
        ; call occurs [#_GetPageNum] ; |403| 
        STL       A,*SP(3)
	.line	12
;----------------------------------------------------------------------
; 406 | theMessage[CMDINDEX]   = cmd;                                          
;----------------------------------------------------------------------
        MVDK      *SP(0),*(_theMessage) ; |406| 
	.line	13
;----------------------------------------------------------------------
; 407 | theMessage[ARGINDEX+0] = bytecount;                                    
;----------------------------------------------------------------------
        MVDK      *SP(14),*(_theMessage+1) ; |407| 
	.line	15
;----------------------------------------------------------------------
; 409 | if(pagestart == pagelast) {                                            
;----------------------------------------------------------------------
        LD        *SP(2),A              ; |409| 
        SUB       *SP(3),A              ; |409| 
        BC        L31,ANEQ              ; |409| 
        ; branch occurs ; |409| 
	.line	17
;----------------------------------------------------------------------
; 411 | SetPage(pagestart);                                                    
;----------------------------------------------------------------------
        LD        *SP(2),A
        CALL      #_SetPage             ; |411| 
        ; call occurs [#_SetPage] ; |411| 
	.line	18
;----------------------------------------------------------------------
; 412 | pagememptr = GetPageAddr(addr);                                        
;----------------------------------------------------------------------
        DLD       *SP(12),A             ; |412| 
        CALL      #_GetPageAddr         ; |412| 
        ; call occurs [#_GetPageAddr] ; |412| 
        STL       A,*SP(1)
	.line	19
;----------------------------------------------------------------------
; 413 | n = bytecount / 2;                                                     
;----------------------------------------------------------------------
        RSBX      SXM
        LD        *SP(14),#-1,A         ; |413| 
        STL       A,*SP(5)              ; |413| 
	.line	20
;----------------------------------------------------------------------
; 414 | for(i = 0; i < n; i++) {                                               
;----------------------------------------------------------------------
        ST        #0,*SP(4)             ; |414| 
        MVDK      *SP(4),*(AR1)
        MVDK      *SP(5),*(AR0)
        CMPR      1,AR1                 ; |414| 
        BC        L37,NTC               ; |414| 
        ; branch occurs ; |414| 
L30:    
	.line	21
;----------------------------------------------------------------------
; 415 | theMessage[DATAINDEX+i] = *pagememptr++;                               
;----------------------------------------------------------------------
        MVDK      *SP(1),*(AR1)
        LD        *AR1+,A
        MVKD      *(AR1),*SP(1)
        MVDK      *SP(4),*(AR1)
        MAR       *+AR1(#16)
        STL       A,*AR1(_theMessage)
	.line	22
        ADDM      #1,*SP(4)             ; |416| 
        MVDK      *SP(5),*(AR0)
        MVDK      *SP(4),*(AR1)
        CMPR      1,AR1                 ; |416| 
        BC        L30,TC                ; |416| 
        ; branch occurs ; |416| 
	.line	23
;----------------------------------------------------------------------
; 417 | } else {                                                               
;----------------------------------------------------------------------
        B         L37                   ; |417| 
        ; branch occurs ; |417| 
L31:    
	.sym	_len,6, 14, 1, 16
	.sym	_n,7, 14, 1, 16
	.sym	_dataptr,8, 30, 1, 16
	.block	23
	.line	25
;----------------------------------------------------------------------
; 419 | u16 len = bytecount / 2;                                               
; 420 | u16 n;                                                                 
; 421 | u16 *dataptr;                                                          
;----------------------------------------------------------------------
        RSBX      SXM
        LD        *SP(14),#-1,A         ; |419| 
        STL       A,*SP(6)              ; |419| 
	.line	29
;----------------------------------------------------------------------
; 423 | dataptr = &theMessage[DATAINDEX];                                      
;----------------------------------------------------------------------
        ST        #_theMessage+16,*SP(8) ; |423| 
	.line	31
;----------------------------------------------------------------------
; 425 | while(len > 0) {                                                       
;----------------------------------------------------------------------
        LD        *SP(6),A              ; |425| 
        BC        L36,AEQ               ; |425| 
        ; branch occurs ; |425| 
L32:    
	.line	33
;----------------------------------------------------------------------
; 427 | pagestart = GetPageNum(addr);                                          
;----------------------------------------------------------------------
        DLD       *SP(12),A             ; |427| 
        CALL      #_GetPageNum          ; |427| 
        ; call occurs [#_GetPageNum] ; |427| 
        STL       A,*SP(2)
	.line	34
;----------------------------------------------------------------------
; 428 | n         = GetPageMAURemaining(addr);                                 
;----------------------------------------------------------------------
        DLD       *SP(12),A             ; |428| 
        CALL      #_GetPageMAURemaining ; |428| 
        ; call occurs [#_GetPageMAURemaining] ; |428| 
        STL       A,*SP(7)
	.line	36
;----------------------------------------------------------------------
; 430 | if(n > len) {                                                          
;----------------------------------------------------------------------
        STLM      A,AR1
        NOP
        MVDK      *SP(6),*(AR0)
        CMPR      2,AR1                 ; |430| 
        BC        L33,NTC               ; |430| 
        ; branch occurs ; |430| 
	.line	37
;----------------------------------------------------------------------
; 431 | n = len;                                                               
;----------------------------------------------------------------------
        LDM       AR0,A
        STL       A,*SP(7)
L33:    
	.line	40
;----------------------------------------------------------------------
; 434 | len -= n;    // for next time thru                                     
;----------------------------------------------------------------------
        LD        *SP(6),A
        SUB       *SP(7),A              ; |434| 
        STL       A,*SP(6)
	.line	43
;----------------------------------------------------------------------
; 437 | pagememptr = GetPageAddr(addr);                                        
;----------------------------------------------------------------------
        DLD       *SP(12),A             ; |437| 
        CALL      #_GetPageAddr         ; |437| 
        ; call occurs [#_GetPageAddr] ; |437| 
        STL       A,*SP(1)
	.line	44
;----------------------------------------------------------------------
; 438 | addr      += n;  // also for next time thru                            
;----------------------------------------------------------------------
        RSBX      SXM
        DLD       *SP(12),A             ; |438| 
        ADD       *SP(7),A              ; |438| 
        DST       A,*SP(12)             ; |438| 
	.line	46
;----------------------------------------------------------------------
; 440 | SetPage(pagestart);                                                    
;----------------------------------------------------------------------
        LD        *SP(2),A
        CALL      #_SetPage             ; |440| 
        ; call occurs [#_SetPage] ; |440| 
	.line	47
;----------------------------------------------------------------------
; 441 | while(n-- > 0) {                                                       
;----------------------------------------------------------------------
        LDU       *SP(7),A
        SUB       #1,A,B                ; |441| 
        BCD       L35,AEQ               ; |441| 
        NOP
        STL       B,*SP(7)
        ; branch occurs ; |441| 
L34:    
	.line	48
;----------------------------------------------------------------------
; 442 | *dataptr++ = *pagememptr++;                                            
;----------------------------------------------------------------------
        MVDK      *SP(1),*(AR1)
        LD        *AR1+,B
        MVKD      *(AR1),*SP(1)
        MVDK      *SP(8),*(AR1)
        LDM       AR1,A
        ADD       #1,A,A                ; |442| 
        STL       A,*SP(8)
        STL       B,*AR1
	.line	49
        MVDK      *SP(7),*(AR1)
        LDM       AR1,A
        SUB       #1,A,A                ; |443| 
        BANZD     L34,*AR1              ; |443| 
        NOP
        STL       A,*SP(7)
        ; branch occurs ; |443| 
L35:    
	.line	50
        LD        *SP(6),A              ; |444| 
        BC        L32,ANEQ              ; |444| 
        ; branch occurs ; |444| 
L36:    
	.endblock	50
L37:    
	.line	53
;----------------------------------------------------------------------
; 447 | SetPage(0);                                                            
;----------------------------------------------------------------------
        CALLD     #_SetPage             ; |447| 
        NOP
        LD        #0,A
        ; call occurs [#_SetPage] ; |447| 
	.line	54
        FRAME     #10
        POPM      AR1
        RET
        ; return occurs
	.endfunc	448,000000400h,11


;***************************************************************
;* UNDEFINED EXTERNAL REFERENCES                               *
;***************************************************************
	.global	_FlashEnable
	.global	_FlashDisable
	.global	_theMessage

;***************************************************************
;* TYPE INFORMATION                                            *
;***************************************************************
	.sym	_u16, 0, 14, 13, 16
	.sym	_u16, 0, 14, 13, 16
	.sym	_u16, 0, 14, 13, 16
